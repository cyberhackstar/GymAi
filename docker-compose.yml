# version: "3.9"

services:
  # ---------- Spring Boot Services ----------
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    hostname: auth-service
    networks:
      - shared_net
    environment:
      # Realistic JVM settings for a 2GB container on Pi 4
      JAVA_OPTS: >-
        -server
        -Xmx1536m  # ~75% of reserved memory
        -Xms1024m  # ~50% of reserved memory
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=100  # More realistic pause target for Pi
        -XX:+UseStringDeduplication
        -XX:+TieredCompilation
        -Djava.security.egd=file:/dev/./urandom
        -Djava.awt.headless=true
        -Dspring.jmx.enabled=false
    restart: always
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:8080/actuator/health/readiness"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.5"
        reservations:
          memory: 1.5G
          cpus: "1.0"
    volumes:
      - maven_cache:/root/.m2
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    hostname: user-service
    networks:
      - shared_net
    environment:
      ADMIN_URL: http://auth-service:8080
      # Realistic JVM settings
      JAVA_OPTS: >-
        -server
        -Xmx1536m
        -Xms1024m
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=100
        -XX:+UseStringDeduplication
        -XX:+TieredCompilation
        -Djava.security.egd=file:/dev/./urandom
        -Djava.awt.headless=true
        -Dspring.jmx.enabled=false
    restart: always
    depends_on:
      - auth-service
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:8080/actuator/health/readiness"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.5"
        reservations:
          memory: 1.5G
          cpus: "1.0"
    volumes:
      - maven_cache:/root/.m2
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  plan-service:
    build:
      context: ./plan-service
      dockerfile: Dockerfile
    container_name: plan-service
    hostname: plan-service
    networks:
      - shared_net
    environment:
      # Smaller JVM settings for a lighter service
      JAVA_OPTS: >-
        -server
        -Xmx768m  # ~75% of reserved memory
        -Xms512m  # ~50% of reserved memory
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=100
        -XX:+UseStringDeduplication
        -XX:+TieredCompilation
        -Djava.security.egd=file:/dev/./urandom
        -Djava.awt.headless=true
        -Dspring.jmx.enabled=false
    restart: always
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:8080/actuator/health/readiness"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
        reservations:
          memory: 768M
          cpus: "0.5"
    volumes:
      - maven_cache:/root/.m2
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # ---------- Angular Frontend ----------
  frontend:
    build:
      context: ./GymWeb
      dockerfile: Dockerfile
    container_name: gym-frontend
    hostname: gym-frontend
    networks:
      - shared_net
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O- http://localhost || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.8"
        reservations:
          memory: 256M
          cpus: "0.4"
    volumes:
      - npm_cache:/root/.npm

networks:
  shared_net:
    name: shared_net

volumes:
  maven_cache:
  npm_cache:
