server:
  port: ${SERVER_PORT:8081}

spring:
  application:
    name: auth-service

  datasource:
    url: jdbc:postgresql://ep-damp-star-ab0lcdvm-pooler.eu-west-2.aws.neon.tech/gym_ai?sslmode=require&channel_binding=require
    username: neondb_owner
    password: npg_5PnAXGO6FLUt
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update # auto-create/update schema for dev
    show-sql: true # show queries in console
    open-in-view: false # prevents LazyInitializationException in web layer
    properties:
      hibernate:
        format_sql: true # pretty print SQL

  rabbitmq:
    addresses: ${CLOUDAMQP_URL:amqps://dnqrhfau:MW512Q4X9oZqYYEmiv2ZnhgG42QS3nOS@puffin.rmq2.cloudamqp.com/dnqrhfau}
    ssl:
      enabled: true # CloudAMQP requires SSL (amqps)

  # OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"

          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - user:email
              - read:user
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: email

          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: login

event:
  exchange: ${EVENT_EXCHANGE:gymai.events}
  routing:
    registration: ${REGISTRATION_ROUTING_KEY:user.registration}
    login: ${LOGIN_ROUTING_KEY:user.login}

jwt:
  secret: ${JWT_SECRET:7ace60a838bde7dc46e8065031ee2ccfba62cb79d5b1b4642fa50a0b88f78efc}
  access:
    expiration: ${JWT_ACCESS_EXPIRATION:900000} # 15 minutes (ms)
  refresh:
    expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days (ms)

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}

logging:
  file:
    name: ${LOG_FILE:logs/auth-service.log}
  level:
    root: INFO
    com.gymai.auth_service: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# Application Configuration
app:
  frontend:
    default-url: http://localhost:4200
    allowed-urls: http://localhost:4200,,https://gymai.neelahouse.cloud,https://gymaibybhawesh.netlify.app
