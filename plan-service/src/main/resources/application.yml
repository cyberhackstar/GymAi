server:
  port: ${SERVER_PORT:8083}

spring:
  application:
    name: plan-service

  # Database Configuration
  datasource:
    url: jdbc:postgresql://ep-damp-star-ab0lcdvm-pooler.eu-west-2.aws.neon.tech/gym_ai?sslmode=require&channel_binding=require
    username: neondb_owner
    password: npg_5PnAXGO6FLUt
    driver-class-name: org.postgresql.Driver

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
    open-in-view: false

  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false

  # Redis Configuration - Works for both local and production
  data:
    redis:
      # Use your Upstash Redis URL for both environments
      url: ${REDIS_URL:redis://default:AdR-AAIncDEzOTQyNTBjODE4OTg0YTgxYmEwNWRlZDAzYzc0YTc1MnAxNTQzOTg@boss-fly-54398.upstash.io:6379}
      timeout: ${REDIS_TIMEOUT:5000ms}
      database: ${REDIS_DATABASE:0}

      # SSL Configuration for Upstash
      ssl:
        enabled: ${REDIS_SSL_ENABLED:true}

      # Connection Pool Configuration
      lettuce:
        pool:
          max-active: ${REDIS_POOL_MAX_ACTIVE:10}
          max-idle: ${REDIS_POOL_MAX_IDLE:8}
          min-idle: ${REDIS_POOL_MIN_IDLE:2}
          max-wait: ${REDIS_POOL_MAX_WAIT:2000ms}
        shutdown-timeout: 100ms

# JWT Configuration
jwt:
  secret: 7ace60a838bde7dc46e8065031ee2ccfba62cb79d5b1b4642fa50a0b88f78efc
  expiration: 3600000 # 1 hour in ms

# External Services Configuration
services:
  auth:
    url: ${AUTH_SERVICE_URL:http://localhost:8081}
  user:
    url: ${USER_SERVICE_URL:http://localhost:8082}
  ai:
    url: ${AI_SERVICE_URL:http://localhost:8000}

# API Integration
api:
  wger:
    url: https://wger.de/api/v2
    timeout: 30000
  spoonacular:
    url: https://api.spoonacular.com
    key: 37dbf57de68f4d79967bf7ac9c0490e5
    timeout: 30000

# Logging Configuration
logging:
  file:
    name: logs/plan-service.log
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    com.gymai.plan_service: ${LOG_LEVEL_APP:DEBUG}
    org.springframework.web.client.RestTemplate: ${LOG_LEVEL_REST:DEBUG}
    org.springframework.http: ${LOG_LEVEL_HTTP:DEBUG}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    # Redis logging
    org.springframework.data.redis: ${LOG_LEVEL_REDIS:INFO}
    io.lettuce.core: WARN

# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: "*"
      cors:
        allowed-origins:
          - ${FRONTEND_URL:http://localhost:4200}
          - ${ADMIN_URL:http://localhost:3000}
        allowed-methods: "*"
        allowed-headers: "*"
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  # Enable Redis health indicator
  health:
    redis:
      enabled: true

# CORS Configuration
cors:
  allowed-origins:
    - ${FRONTEND_URL:http://localhost:4200}
    - ${ADMIN_URL:http://localhost:3000}
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Application Specific Configuration
app:
  features:
    cache-enabled: ${CACHE_ENABLED:true}
    ai-integration-enabled: ${AI_INTEGRATION_ENABLED:true}
    external-apis-enabled: ${EXTERNAL_APIS_ENABLED:true}
  limits:
    max-plan-regenerations-per-day: ${MAX_PLAN_REGENERATIONS:5}
    max-users-per-batch: ${MAX_USERS_PER_BATCH:100}
  environment: ${APP_ENVIRONMENT:development}

# Cache Configuration - Enabled by default since you're using Redis everywhere
cache:
  redis:
    enabled: ${CACHE_ENABLED:true}
    ttl:
      user-profile: ${CACHE_TTL_USER_PROFILE:3600} # 1 hour (3600 seconds)
      diet-plan: ${CACHE_TTL_DIET_PLAN:86400} # 24 hours (86400 seconds)
      workout-plan: ${CACHE_TTL_WORKOUT_PLAN:86400} # 24 hours (86400 seconds)
      nutrition-analysis: ${CACHE_TTL_NUTRITION:3600} # 1 hour (3600 seconds)
      plans-response: ${CACHE_TTL_PLANS_RESPONSE:7200} # 2 hours (7200 seconds)
      foods-by-preference: ${CACHE_TTL_FOODS:21600} # 6 hours (21600 seconds)
      exercises-by-focus: ${CACHE_TTL_EXERCISES:21600} # 6 hours (21600 seconds)

    # Cache key prefixes
    key-prefix: ${CACHE_KEY_PREFIX:fitness:}

    # Fallback settings when Redis is temporarily unavailable
    fallback:
      enabled: true
      log-errors: true
